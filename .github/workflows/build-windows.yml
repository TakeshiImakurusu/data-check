name: Build Windows EXE

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: [ '.github/workflows/build-windows.yml' ]

jobs:
  build-windows-exe:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pandas openpyxl pyodbc pymysql
    
    - name: Test basic Python functionality
      run: |
        echo "=== Environment Check ==="
        python --version
        echo "Checking required modules:"
        python -c "import tkinter; print('‚úì tkinter')"
        python -c "import pandas; print('‚úì pandas')"
        python -c "import openpyxl; print('‚úì openpyxl')"
        python -c "import json; print('‚úì json')"
        echo ""
        echo "=== Project Files ==="
        dir *.py
        echo ""
        echo "=== Config Files ==="
        if (Test-Path "app_settings.json") { echo "‚úì app_settings.json" }
        if (Test-Path "check_definitions.json") { echo "‚úì check_definitions.json" }
    
    - name: Create simplified spec file
      run: |
        echo "Creating PyInstaller spec file..."
        $spec = @"
# -*- mode: python ; coding: utf-8 -*-

block_cipher = None

a = Analysis(
    ['data_check.py'],
    pathex=[],
    binaries=[],
    datas=[
        ('app_settings.json', '.'),
        ('check_definitions.json', '.'),
    ],
    hiddenimports=[
        'dekispart',
        'innosite', 
        'dekispart_school',
        'cloud',
        'tkinter',
        'tkinter.ttk',
        'tkinter.messagebox',
        'tkinter.filedialog',
        'pandas',
        'openpyxl',
        'threading',
        'datetime',
        'json',
        'os',
        'sys'
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='DataCheck',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=False,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=True,
    disable_windowed_traceback=False,
    icon=None,
    codesign_identity=None,
    entitlements_file=None,
)
"@
        $spec | Out-File -FilePath "data_check.spec" -Encoding UTF8
    
    - name: Build EXE with PyInstaller
      run: |
        echo "=== Building DataCheck.exe ==="
        pyinstaller data_check.spec --clean --noconfirm
    
    - name: Check build results and test EXE
      run: |
        echo "=== Build Results ==="
        if (Test-Path "dist") {
          echo "dist directory contents:"
          Get-ChildItem dist -Recurse | Format-Table Name, Length
          
          if (Test-Path "dist\DataCheck.exe") {
            $size = (Get-Item "dist\DataCheck.exe").Length / 1MB
            Write-Host "‚úÖ DataCheck.exe created successfully"
            Write-Host "üì¶ Size: $($size.ToString('F2')) MB"
            
            # Test EXE execution (basic check)
            echo ""
            echo "=== Testing EXE execution ==="
            try {
              $process = Start-Process -FilePath "dist\DataCheck.exe" -ArgumentList "--help" -PassThru -Wait -WindowStyle Hidden
              echo "‚úÖ EXE runs without immediate crash"
            } catch {
              echo "‚ö†Ô∏è  EXE test failed: $_"
            }
          } else {
            Write-Host "‚ùå DataCheck.exe not found"
            exit 1
          }
        } else {
          echo "‚ùå dist directory not created"
          exit 1
        }
    
    - name: Upload Windows EXE Artifact
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: DataCheck-Windows-EXE
        path: dist/DataCheck.exe
        retention-days: 30
        
    - name: Upload build logs on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: Build-Logs
        path: |
          build/
          *.log
        retention-days: 7
